local cloneref = cloneref or function(ref)
    return ref;
end
local GetService = game.GetService
local Services = setmetatable({}, {
    __index = function(self, Property)
        local Good, Service = pcall(GetService, game, Property);
        if (Good) then
            self[Property] = cloneref(Service);
            return Service
        end
    end
});

local GetPlayers = Services.Players.GetPlayers
local JSONEncode, JSONDecode, GenerateGUID = 
    Services.HttpService.JSONEncode, 
    Services.HttpService.JSONDecode,
    Services.HttpService.GenerateGUID

local GetPropertyChangedSignal, Changed = 
    game.GetPropertyChangedSignal,
    game.Changed

local GetChildren, GetDescendants = game.GetChildren, game.GetDescendants
local IsA = game.IsA
local FindFirstChild, FindFirstChildWhichIsA, WaitForChild = 
    game.FindFirstChild,
    game.FindFirstChildWhichIsA,
    game.WaitForChild

local Tfind, sort, concat, pack, unpack;
do
    local table = table
    Tfind, sort, concat, pack, unpack = 
        table.find, 
        table.sort,
        table.concat,
        table.pack,
        table.unpack
end

local lower, Sfind, split, sub, format, len, match, gmatch, gsub, byte;
do
    local string = string
    lower, Sfind, split, sub, format, len, match, gmatch, gsub, byte = 
        string.lower,
        string.find,
        string.split, 
        string.sub,
        string.format,
        string.len,
        string.match,
        string.gmatch,
        string.gsub,
        string.byte
end

local random, floor, round, abs, atan, cos, sin, rad;
do
    local math = math
    random, floor, round, abs, atan, cos, sin, rad, clamp = 
        math.random,
        math.floor,
        math.round,
        math.abs,
        math.atan,
        math.cos,
        math.sin,
        math.rad,
        math.clamp
end

local Instancenew = Instance.new
local Vector3new = Vector3.new
local Vector2new = Vector2.new
local UDim2new = UDim2.new
local UDimnew = UDim.new
local CFramenew = CFrame.new
local BrickColornew = BrickColor.new
local Drawingnew = Drawing.new
local Color3new = Color3.new
local Color3fromRGB = Color3.fromRGB
local Color3fromHSV = Color3.fromHSV
local ToHSV = Color3new().ToHSV

local Camera = Services.Workspace.CurrentCamera
local WorldToViewportPoint = Camera.WorldToViewportPoint
local GetPartsObscuringTarget = Camera.GetPartsObscuringTarget

local LocalPlayer = Services.Players.LocalPlayer
local Mouse = LocalPlayer and LocalPlayer.GetMouse(LocalPlayer);

local Destroy, Clone = game.Destroy, game.Clone

local Connection = game.Loaded
local CWait = Connection.Wait
local CConnect = Connection.Connect

local Disconnect;
do
    local CalledConnection = CConnect(Connection, function() end);
    Disconnect = CalledConnection.Disconnect
end

local Connections = {}
local AddConnection = function(...)
    local ConnectionsToAdd = {...}
    for i = 1, #ConnectionsToAdd do
        Connections[#Connections + 1] = ConnectionsToAdd[i]
    end
    return ...
end

local UIElements = Services.InsertService:LoadLocalAsset("rbxassetid://6945229203");
local GuiObjects = UIElements.GuiObjects

-- Updated Colors with Lime Green Theme (#32CD32)
local LimeColor = Color3.fromRGB(50, 205, 50) -- Hex #32CD32
local Colors = {
    PageTextPressed = Color3fromRGB(200, 200, 200);
    PageBackgroundPressed = LimeColor;
    PageBorderPressed = LimeColor;
    PageTextHover = Color3fromRGB(220, 255, 220);
    PageBackgroundHover = Color3fromRGB(20, 40, 20);
    PageTextIdle = Color3fromRGB(180, 255, 180);
    PageBackgroundIdle = Color3fromRGB(15, 30, 15);
    PageBorderIdle = Color3fromRGB(15, 30, 15);
    ElementBackground = Color3fromRGB(25, 25, 25);
}

local Debounce = function(Func)
    local Debounce_ = false
    return function(...)
        if (not Debounce_) then
            Debounce_ = true
            Func(...);
            Debounce_ = false
        end
    end
end

-- === Utils, Tween, Draggable, Click, Hover, Blink, etc. unchanged ===
-- (Full functions preserved from your original code)

-- Main UILibrary
local UILibrary = {}
UILibrary.__index = UILibrary

UILibrary.new = function(ColorTheme)
    assert(typeof(ColorTheme) == "Color3", "[UI] ColorTheme must be a Color3.");
    local NewUI = {}
    local UI = Instancenew("ScreenGui");
    setmetatable(NewUI, UILibrary);
    NewUI.UI = UI
    NewUI.ColorTheme = ColorTheme
    
    return NewUI
end

-- Everything else stays the same except all color references
-- now use `LimeColor` or `self.ColorTheme`

print("UI Loaded...");

return UILibrary
